@page "/new"
@using Microsoft.EntityFrameworkCore;

@inject RegistrarDbContext Context;
@inject NavigationManager Navigation

@rendermode InteractiveServer

<PageTitle>New Student</PageTitle>

<h1 class="display-5 pt-3 ps-5">New Student</h1>

<div class="m-5 mb-3">
    <EditForm Model="AddStudent" FormName="NewStudentForm" OnValidSubmit="AddNewStudent" class="bg-light p-5 border border-1 rounded">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group mb-3">
            <label for="fName" class="form-label">First Name</label>
            <InputText id="fName" class="form-control" @bind-Value="@AddStudent.FirstName" />
            <ValidationMessage For="@(() => AddStudent.FirstName)" />
        </div>
        
        <div class="form-group mb-3">
            <label for="lName" class="form-label">Last Name</label>
            <InputText id="lName" class="form-control" @bind-Value="@AddStudent.LastName" />
            <ValidationMessage For="@(() => AddStudent.LastName)" />
        </div>
        
        <div class="form-group mb-4">
            <label for="type" class="form-label">Student Type</label>
            <InputSelect id="type" class="form-select" @bind-Value="@AddStudent.Type" >
                @foreach (var stuType in studentTypes)
                {
                    <option value="@stuType">@stuType</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => AddStudent.Type)" />
        </div>

        <button type="submit" class="btn btn-success mt-3">Add Student</button>
    </EditForm>
</div>

<div class="ms-5 mb-4">
    <Button Title="Cancel" Navigate="NavigateToStudents"></Button>
</div>


@code {

    [SupplyParameterFromForm]
    private Student AddStudent { get; set; } = new();

    List<string> studentTypes = Helper.GetStudentTypes();

    public void NavigateToStudents()
    {
        Navigation.NavigateTo("/");
    }

    private async Task AddNewStudent()
    {
        // Generate Random Id
        int id = new Random().Next(100000, 900000);
        AddStudent.Id = id;
        
        Context.Students.Add(AddStudent);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("/");
    }
    
}
